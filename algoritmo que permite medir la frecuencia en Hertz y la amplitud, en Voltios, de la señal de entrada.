// C++ code
//
#include <Adafruit_LiquidCrystal.h>

int analogPin = 0;
int pulsador1 = 1;
int pulsador2 = 2;
int val = 0;
int pul1=0;
int pul2=0;
int i=0;

unsigned long tfinal = 0;
unsigned long duracion = 100; 
unsigned long tinicial = 0;
int reinicio = 0;
float frequencia = 0.0;
float amplitud = 0.0;

Adafruit_LiquidCrystal lcd_1(0);

void setup()
{
  Serial.begin(9600);
  lcd_1.begin(16, 2);
  pinMode(analogPin, INPUT);
  pinMode(pulsador1, INPUT);
  pinMode(pulsador2, INPUT);
}

void loop()
{
  
  
  pul1 = analogRead(pulsador1);
  //Serial.println(pul1);
  pul2 = analogRead(pulsador2);
  
  
  if(pul1>500){
    i=1;
    tinicial = millis();
    reinicio = 0;}
  
    if(i==1){  
    
    
  val = analogRead(analogPin);
  Serial.println(val);
  lcd_1.setCursor(0, 1);
  lcd_1.setBacklight(1);
  lcd_1.setBacklight(0);
  
  amplitud = (val / 1023.0) * 5.0;  
      
    if (val > 512 && analogRead(analogPin) <= 512) { 
      reinicio++;
      }
 if (millis() - tfinal >= duracion) {
      tfinal = millis();
      frequencia = (float)reinicio / (duracion / 1000.0);

      // Mostrar los valores en el LCD
      lcd_1.setCursor(0, 0);
      lcd_1.print("F: ");
      lcd_1.print(frequencia);
      lcd_1.print(" Hz");

      lcd_1.setCursor(0, 1);
      lcd_1.print("A: ");
      lcd_1.print(amplitud);
      lcd_1.print(" V");

      reinicio = 0; // Reiniciar el contador de ciclos
    }

    // Serial print para depuración
    Serial.print("Amplitud: ");
    Serial.print(amplitud);
    Serial.print(" V, Frecuencia: ");
    Serial.print(frequencia);
    Serial.println(" Hz");

    // Apagar la medición si se presiona el pulsador 2
    if (pul2 > 500) {
      i = 0;
    }
  }
}
