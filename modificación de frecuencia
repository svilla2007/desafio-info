#include <Adafruit_LiquidCrystal.h>

int analogPin = 0;  // Pin para leer la señal de entrada
int pulsador1 = 1;  // Pin para iniciar la medición
int pulsador2 = 2;  // Pin para detener la medición
int val = 0;
int pul1 = 0;
int pul2 = 0;
int i = 0;
unsigned long tfinal = 0;
unsigned long duracion = 100;  // Duración de medición (1 segundo)
unsigned long tinicial = 0;
int reinicio = 0;  // Contador de cruces por cero
float frecuencia = 0.0;
float amplitud = 0.0;

Adafruit_LiquidCrystal lcd_1(0);

String identificarFormaDeOnda(float freq) {
    if (freq < 1) {
        return "Desconocida";
    } else if (freq < 5) {
        return "Senoidal";
    } else if (freq < 10) {
        return "Cuadrada";
    } else if (freq < 15) {
        return "Triangular";
    } else {
        return "Desconocida";
    }
}
void limpiarLCD() {
    lcd_1.clear(); // Limpiar toda la pantalla
}

void setup() {
  Serial.begin(9600);
  lcd_1.begin(16, 2);
  pinMode(analogPin, INPUT);
  pinMode(pulsador1, INPUT);
  pinMode(pulsador2, INPUT);
}

void loop() {
  pul1 = analogRead(pulsador1);
  pul2 = analogRead(pulsador2);

  if (pul1 > 100) {  // Iniciar medición cuando se presiona el pulsador 1
    i = 1;
    tinicial = millis();  // Guardar tiempo inicial
    reinicio = 0;       // Reiniciar contador de cruces por cero
  }

  if (i == 1) {  // Si la medición está activa
    val = analogRead(analogPin);
    Serial.println(val);
    lcd_1.setCursor(0, 1);
    lcd_1.setBacklight(1);
    lcd_1.setBacklight(0);

    amplitud = (val / 1023.0) * 5.0;  // Calcular la amplitud en voltios
  
    // Detección de cruce por cero (punto medio en señal de 10 bits)
    static int prevVal = 512;  // Valor anterior para detectar cruce
    if ((val > 512 && prevVal <= 512) || (val < 512 && prevVal >= 512)) {
      reinicio++;  // Incrementar contador de cruces por cero
    }
    prevVal = val;  // Guardar valor anterior
  
    // Comprobar si ha pasado el tiempo de medición
    if (millis() - tinicial >= duracion) {
      tfinal = millis();  // Guardar tiempo final de medición
      
	  float ciclosCompletos = reinicio / 2.0;
      // Calcular la frecuencia

      // Cada dos cruces por cero representan un ciclo completo de la señal
         frecuencia = (reinicio / 2.0) / (duracion / 1000.0);
      // Mostrar los valores en el LCD
      limpiarLCD();
      lcd_1.setCursor(0, 0);
      lcd_1.print("F: ");
      lcd_1.print(frecuencia);
      lcd_1.print(" Hz");
   
      lcd_1.setCursor(0, 1);
      lcd_1.print("A: ");
      lcd_1.print(amplitud);
      lcd_1.print(" V");
        //
      // Depuración en el monitor serie
      Serial.print("Amplitud: ");
      Serial.print(amplitud);
      Serial.print(" V, Frecuencia: ");
      Serial.print(frecuencia);
      Serial.println(" Hz");
      
      
      
      
      String formaOnda = identificarFormaDeOnda(frecuencia);
      limpiarLCD(); // Limpiar el LCD antes de imprimir la forma de onda
      lcd_1.setCursor(0, 0);
      lcd_1.print("Forma: ");
      lcd_1.print(formaOnda);
      lcd_1.print("    "); // Limpiar el resto de la línea
	  delay(5);


      // Reiniciar la medición
      

      reinicio = 0;
      limpiarLCD();
      i=0;
    }
    // Detener la medición si se presiona el pulsador 2
    if (pul2 > 100) {
      i = 0;
    }
  }
}

